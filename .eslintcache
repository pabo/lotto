[{"/Users/pabo/repos/pabo/lotto/src/index.js":"1","/Users/pabo/repos/pabo/lotto/src/App.js":"2","/Users/pabo/repos/pabo/lotto/src/reportWebVitals.js":"3","/Users/pabo/repos/pabo/lotto/src/LottoStore.js":"4","/Users/pabo/repos/pabo/lotto/src/entries.js":"5"},{"size":500,"mtime":1757207788674,"results":"6","hashOfConfig":"7"},{"size":3137,"mtime":1757211534788,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1757207788674,"results":"9","hashOfConfig":"7"},{"size":1805,"mtime":1757207788674,"results":"10","hashOfConfig":"7"},{"size":8824,"mtime":1757211475710,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1trvsgj",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/pabo/repos/pabo/lotto/src/index.js",[],["24","25"],"/Users/pabo/repos/pabo/lotto/src/App.js",[],"/Users/pabo/repos/pabo/lotto/src/reportWebVitals.js",[],"/Users/pabo/repos/pabo/lotto/src/LottoStore.js",["26"],"import {makeAutoObservable} from 'mobx';\n\nconst INDEX_OF_MULTIBALL = 5;\n\nclass LottoStore {\n    constructor() {\n        makeAutoObservable(this);\n    };\n\n    filters = [];\n    multiFilter = null;\n    currentFilter = '';\n    hideNonMatching = true;\n\n    handleToggle = (e) => {\n        this.hideNonMatching = e.target.checked;\n    }\n\n    removeFilter = (value, isMulti) => {\n        console.log(\"removing\", value)\n        console.log(\"isMulti\", isMulti)\n        if (isMulti) {\n            this.multiFilter = undefined;\n        }\n        else {\n            this.filters = this.filters.filter(x => x !== value);\n        }\n    }\n\n    addFilter = (value, isMulti) => {\n        if (isMulti) {\n            this.multiFilter = value;\n        }\n        else {\n            this.filters = Array.from(new Set([...this.filters, value]));\n        }\n    }\n\n    handleFilterClick = (e, isMulti) => {\n        const value = e.target.getAttribute('data-value');\n\n        this.removeFilter(value, isMulti);\n    }\n\n    handleCardClick = (e, isMulti) => {\n        if (!isMulti && this.filters.length >= INDEX_OF_MULTIBALL) {\n            return;\n        }\n\n        const value = e.target.getAttribute('data-value');\n\n        this.addFilter(value, isMulti);\n    };\n\n    clearState = () => {\n        this.filters = [];\n        this.currentFilter = \"\";\n        this.multiFilter = undefined;\n    };\n\n    changeHandler = (e) => {\n        this.currentFilter = e.target.value;\n    };\n\n    submitHandler = (e) => {\n        e.preventDefault();\n\n        let paddedCurrentFilter = this.currentFilter;\n\n        if (this.currentFilter.length === 1) {\n           paddedCurrentFilter = `0${this.currentFilter}` ;\n        }\n\n        this.addFilter(paddedCurrentFilter);\n        this.currentFilter = \"\";\n    };\n}\n\nexport default new LottoStore();","/Users/pabo/repos/pabo/lotto/src/entries.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":79,"column":1,"nodeType":"33","endLine":79,"endColumn":33},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]